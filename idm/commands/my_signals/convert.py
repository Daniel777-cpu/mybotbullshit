from ...objects import dp, MySignalEvent
from ...utils import edit_message, new_message, delete_message, sticker_message

@dp.my_signal_event_handle('—Ä–∞—Å–∫', 'hfcr', '–∫–æ–Ω–≤')
def convert(event: MySignalEvent) -> str:
    _eng_chars = u"~!@#$%^&qwertyuiop[]asdfghjkl;'zxcvbnm,./QWERTYUIOP{}ASDFGHJKL:\"|ZXCVBNM<>?"
    _rus_chars = u"—ë!\"‚Ññ;%:?–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é.–ô–¶–£–ö–ï–ù–ì–®–©–ó–•–™–§–´–í–ê–ü–†–û–õ–î–ñ–≠/–Ø–ß–°–ú–ò–¢–¨–ë–Æ,"
    _trans_table = dict(zip(_eng_chars, _rus_chars))
    s = ''
    if bool(event.args):
        s = " ".join(event.args)
    if bool(event.payload):
        s = s + '\n' + event.payload
    if event.reply_message != None:
        s = s + '\n' + event.reply_message['text']
    if s == '':
        new_message(event.api, event.chat.peer_id, message='–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö ü§¶')
    msg = u''.join([_trans_table.get(c, c) for c in s])
    new_message(event.api, event.chat.peer_id, message=msg)
    return "ok"